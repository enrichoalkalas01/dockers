# Stage 1: Build the Node.js app
FROM node:18.18.0-alpine AS build

WORKDIR /app

COPY package*.json ./

RUN npm install -g npm@latest && \
    npm install && \
    npm cache clean --force

COPY . .

RUN npx prisma generate

# Stage 2: Setup NGINX
FROM nginx:1.21.6-alpine

# Copy the build output from the previous stage
COPY --from=build /app /usr/share/nginx/html

# Install Node.js
RUN apk add --update nodejs npm

# Set the working directory to the directory where the app was copied
WORKDIR /usr/share/nginx/html

# Copy the NGINX configuration file
COPY conf_nginx.conf /etc/nginx/conf.d/default.conf

EXPOSE 80

# # Start the app in the background
# RUN node index.js &

# CMD ["nginx", "-g", "daemon off;"]

ENV PORT=5000
ENV APP_VERSION=API_VERSION
ENV DATABASE_URL=postgresql://postgres:1sampai10@host.docker.internal:5432/asd
ENV SoundChartsID=asd
ENV SoundChartsApiKey=asd
ENV SoundChartsBaseURL=asd

CMD node index.js & nginx -g 'daemon off;'